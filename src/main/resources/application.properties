server.port=8099
# BANNER
#banner.location=classpath:banner.txt
###############mybatis#################################
mybatis.mapper-locations=classpath:mappers/**.xml
#######################################################
#######################################################
#################数据源################################
spring.datasource.name=testchr
spring.datasource.url=jdbc:mysql://localhost:3307/testchr
spring.datasource.username=root
spring.datasource.password=root
#######################################################
#######################################################
##################druid################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=200
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=60000
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.validation-query-timeout=30000
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=30000
spring.datasource.druid.use-global-data-source-stat=true
#######################################################
#############logger####################################
# LOGGING:LEVEL：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#logging.path=com.sumsoon.**
#com.sumsoon包下所有class以DEBUG级别输出
logging.level.com.sumsoon.TestMapApplication=info
#springBoot打印mybatis的sql语句(logback)
logging.level.com.sumsoon.zzz.mapper=debug
#springBoot打印mybatis的sql语句(mybatis)
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#root日志以debug级别输出
#logging.level.root=debug
#logging.level.org.mybatis=debug
#logging.level.org.apache=info
#logging.level.org.springframework=info
#=====================================  log  引入log配置文件(配置文件的功能更强大)=============================
#logging.config属性指定自定义日志文件的名字：该配置文件包括(输出到本地文件&控制台打印)
logging.config=classpath:logback-boot.xml
#######################################################
#######################################################
#jpa打印运行时sql语句到控制台
#spring.jpa.show-sql=true
#
#
#
#
#
#
#
#
#
#
#######################################################
#######################################################
############logging.file和logging.path的用法###########
#
#如果要编写除控制台输出之外的日志文件，则需在application.properties中设置logging.file或logging.path属性。
#
#logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：logging.file=my.log
#logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：logging.path=/var/log
#如果只配置 logging.file，会在项目的当前路径下生成一个 xxx.log 日志文件。
#如果只配置 logging.path，在 /var/log文件夹生成一个日志文件为 spring.log
#注：二者不能同时使用，如若同时使用，则只有logging.file生效
#默认情况下，日志文件的大小达到10MB时会切分一次，产生新的日志文件，默认级别为：ERROR、WARN、INFO
#######################################################
#######################################################
######################日志文件名字的介绍################
#根据不同的日志系统，你可以按如下规则组织配置文件名，就能被正确加载：
#
#Logback：logback-spring.xml, logback-spring.groovy, logback.xml, logback.groovy
#Log4j：log4j-spring.properties, log4j-spring.xml, log4j.properties, log4j.xml
#Log4j2：log4j2-spring.xml, log4j2.xml
#JDK (Java Util Logging)：logging.properties
#Spring Boot官方推荐优先使用带有-spring的文件名作为你的日志配置（如使用logback-spring.xml，而不是logback.xml），命名为logback-spring.xml的日志配置文件，spring boot可以为它添加一些spring boot特有的配置项（下面会提到）。
#默认的命名规则，并且放在 src/main/resources 下面即可
#
#如果你即想完全掌控日志配置，但又不想用logback.xml作为Logback配置的名字，application.yml可以通过logging.config属性指定自定义的名字：
#
#logging.config=classpath:logging-config.xml
